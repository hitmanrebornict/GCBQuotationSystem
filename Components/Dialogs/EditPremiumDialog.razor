@inject MasterDataServices MDS
@inject DialogService DialogService
@inject NotificationService NotificationService

<div class="col-md-12">
    <div style="margin-bottom: 1rem" class="row">
        <div class="col-md-3">
            <RadzenLabel Text="Premium Name" Component="PremiumName" style="width: 100%">
            </RadzenLabel>
        </div>
        <div class="col-md-9">
            <RadzenTextBox MaxLength="100" style="width: 100%" @bind-Value="premium.PremiumName" Name="PremiumName" Placeholder="Please enter premium name..." />
        </div>
    </div>
    <div style="margin-bottom: 1rem" class="row">
        <div class="col-md-3">
            <RadzenLabel Text="Premium Type" Component="PremiumType" style="width: 100%">
            </RadzenLabel>
        </div>
        <div class="col-md-9">
            <RadzenDropDown Data="@premiumTypes" @bind-Value="@premium.PremiumType" style="width: 100%" Placeholder="Select Premium Type..." />
        </div>
    </div>
    <div style="margin-bottom: 1rem" class="row">
        <div class="col-md-3">
            <RadzenLabel Text="Premium Cost" Component="PremiumCost" style="width: 100%">
            </RadzenLabel>
        </div>
        <div class="col-md-9">
            <RadzenNumeric TValue="decimal" @bind-Value="@premium.PremiumCost" style="width: 100%" Format="c2" />
        </div>
    </div>
    <div style="margin-bottom: 1rem" class="row">
        <div class="col-md-3">
            <RadzenLabel Text="Active" Component="Active" style="width: 100%">
            </RadzenLabel>
        </div>
        <div class="col-md-9">
            <RadzenSwitch @bind-Value="@premium.Active" Name="Active" />
        </div>
    </div>
    <div style="margin-bottom: 1rem" class="row">
        <div class="col-md-3">
            <RadzenLabel Text="Valid From" Component="DateFrom" style="width: 100%">
            </RadzenLabel>
        </div>
        <div class="col-md-9">
            <RadzenDatePicker @bind-Value="@dateFrom" style="width: 100%" DateFormat="d" />
        </div>
    </div>
    <div style="margin-bottom: 1rem" class="row">
        <div class="col-md-3">
            <RadzenLabel Text="Valid To" Component="DateTo" style="width: 100%">
            </RadzenLabel>
        </div>
        <div class="col-md-9">
            <RadzenDatePicker @bind-Value="@dateTo" style="width: 100%" DateFormat="d" />
        </div>
    </div>
</div>

<div class="row">
    <div class="col offset-sm-3">
        <RadzenButton ButtonType="Radzen.ButtonType.Submit" Icon="save" Text="Save" ButtonStyle="ButtonStyle.Primary" Click="@HandleSubmit" />
        <RadzenButton ButtonStyle="ButtonStyle.Light" style="margin-left: 1rem" Text="Cancel" Click="@CancelDialog" />
    </div>
</div>

@code {
    [Parameter]
    public int PremiumId { get; set; }

    [CascadingParameter]
    private Dialog _dialog { get; set; }

    private Premium premium = new Premium();
    private DateTime dateFrom;
    private DateTime dateTo;
    private List<string> premiumTypes = new List<string> { "Liquor", "Butter", "Powder" };

    protected override async Task OnInitializedAsync()
    {
        premium = await MDS.GetPremiumByIdAsync(PremiumId);
        dateFrom = premium.DateFrom.ToDateTime(TimeOnly.MinValue);
        dateTo = premium.DateTo.ToDateTime(TimeOnly.MinValue);
        
        SetTitleContent();
        DialogService.Refresh();
    }

    private async Task HandleSubmit()
    {
        try
        {
            if (string.IsNullOrEmpty(premium.PremiumName) || string.IsNullOrEmpty(premium.PremiumType) || premium.PremiumCost <= 0)
            {
                NotificationService.Notify(new NotificationMessage
                {
                    Severity = NotificationSeverity.Error,
                    Summary = "Error",
                    Detail = "Please fill in all required fields.",
                    Duration = 4000
                });
                return;
            }

            premium.DateFrom = DateOnly.FromDateTime(dateFrom);
            premium.DateTo = DateOnly.FromDateTime(dateTo);
            
            await MDS.UpdatePremiumAsync(premium);
            
            NotificationService.Notify(new NotificationMessage
            {
                Severity = NotificationSeverity.Success,
                Summary = "Success",
                Detail = "Premium updated successfully",
                Duration = 4000
            });
            
            DialogService.Close(true);
        }
        catch (Exception ex)
        {
            NotificationService.Notify(new NotificationMessage
            {
                Severity = NotificationSeverity.Error,
                Summary = "Error",
                Detail = $"Failed to update premium: {ex.Message}",
                Duration = 4000
            });
        }
    }

    private void CancelDialog()
    {
        DialogService.Close(false);
    }
    
    void SetTitleContent()
    {
        _dialog.Title = null; // clear default title
        _dialog.Options.TitleContent = service =>
        @<RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start" Gap="10px">
            <h5>Edit Premium</h5>
        </RadzenStack>;
    }
} 