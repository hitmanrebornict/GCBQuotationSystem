@attribute [Authorize(Roles = "Sales Admin,Sales User,IT Admin,Admin,NPD")]

@page "/Recipe"
@inject DialogService DialogService
@inject MasterDataServices MDS

<RadzenCard>
    <h3>Recipe</h3>
    <hr />
    <div class="d-flex justify-content-between mb-4">
        <RadzenButton Text="Create New Recipe"
                      Icon="add_circle_outline"
                      ButtonStyle="ButtonStyle.Primary"
                      Click="@CreateButtonOnClick" />
    </div>

    <RadzenDataGrid Data="@recipes"
                    TItem="Recipe"
                    AllowFiltering="true"
                    AllowSorting="true"
                    AllowPaging="true"
                    AllowColumnResize="true"
                    PageSize="10"
                    FilterMode="FilterMode.CheckBoxList"
                    FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                    EmptyText="No recipes found">
        <Columns>
            <RadzenDataGridColumn Property="RecipeCode" Title="Recipe Code" Width="150px" />
            <RadzenDataGridColumn Property="RecipeDesc" Title="Recipe Description" />
            <RadzenDataGridColumn Property="Active" Title="Active" Width="80px">
                <Template Context="recipe">
                    <RadzenCheckBox Value="@recipe.Active" Disabled="true" />
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Recipe" Title="Actions" TextAlign="TextAlign.Center" Width="120px">
                <Template Context="recipe">
                    <RadzenButton Icon="edit"
                                  ButtonStyle="ButtonStyle.Info"
                                  Size="ButtonSize.Medium"
                                  Variant="Variant.Flat"
                                  Class="m-1"
                                  Click="@(() => EditRecipe(recipe))"
                                  ToolTip="Edit Recipe" />
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
</RadzenCard>

<style>
    .recipe-data-grid {
        height: calc(100vh - 250px);
        min-height: 400px;
    }
</style>

@code {
    private List<Recipe> recipes = new List<Recipe>();
    
    protected override async Task OnInitializedAsync()
    {
        recipes = await MDS.GetRecipesAsync();
    }
    
    private async Task CreateButtonOnClick()
    {
        var options = new DialogOptions() 
        { 
            Width = "90vw",
            Height = "90vh",
            CloseDialogOnOverlayClick = false,
            Resizable = true,
            Draggable = true
        };
        
        var result = await DialogService.OpenAsync<AddRecipeDialog>("New Recipe", 
            options: options);
            
        if (result == true)
        {
            recipes = await MDS.GetRecipesAsync();
            await InvokeAsync(StateHasChanged);
        }
    }

    private async Task EditRecipe(Recipe recipe)
    {
        var options = new DialogOptions() 
        { 
            Width = "90vw",
            Height = "90vh",
            CloseDialogOnOverlayClick = false,
            Resizable = true,
            Draggable = true
        };
        
        var result = await DialogService.OpenAsync<EditRecipeDialog>("Edit Recipe", 
            new Dictionary<string, object>() { { "RecipeId", recipe.RecipeId } },
            options);
            
        if (result == true)
        {
            recipes = await MDS.GetRecipesAsync();
            await InvokeAsync(StateHasChanged);
        }
    }
}
